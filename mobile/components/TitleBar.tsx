import React, { useEffect, useState } from 'react';
import { View, Platform, Text, Animated } from 'react-native';
import { SvgXml } from 'react-native-svg';
import { BlurView } from 'expo-blur';
import { useFonts } from 'expo-font';

// Yahoo SVG data with color #FFD52E
const yahooSvg = `<svg width="122" height="24" viewBox="0 0 122 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M7.91797 5.69531L11.3516 11.7305L14.4219 5.71875C14.457 5.63672 14.5273 5.58984 14.6094 5.58984H21.5234C21.5586 5.58984 21.5938 5.60156 21.6289 5.625C21.6992 5.67188 21.7227 5.73047 21.7227 5.78906C21.7227 5.82422 21.7227 5.85938 21.6992 5.90625L14.7852 17.6016C13.7656 19.3945 12.5117 20.7539 11 21.6914C9.51172 22.6406 7.61328 23.1211 5.29297 23.1211C4.48438 23.1211 3.71094 23.0625 2.99609 22.9336C2.30469 22.8047 1.64844 22.6172 1.05078 22.3711C0.96875 22.3242 0.921875 22.2656 0.921875 22.1836C0.921875 22.1602 0.921875 22.125 0.933594 22.1016L2.23438 18.6562C2.28125 18.5625 2.33984 18.5156 2.43359 18.5156L2.49219 18.5273C2.90234 18.668 3.30078 18.7734 3.69922 18.8438C4.08594 18.9141 4.46094 18.9492 4.83594 18.9492C5.50391 18.9492 6.11328 18.8203 6.65234 18.5742C7.15625 18.3398 7.58984 18 7.97656 17.543L0.21875 5.92969C0.183594 5.89453 0.171875 5.84766 0.171875 5.80078C0.195312 5.66016 0.265625 5.58984 0.382812 5.58984H7.74219C7.8125 5.60156 7.87109 5.63672 7.91797 5.69531ZM28.7422 13.3594C29.4336 13.8047 30.2656 14.0273 31.2383 14.0273C31.7422 14.0273 32.1992 13.9805 32.6211 13.8633C33.043 13.7461 33.418 13.582 33.7578 13.3594C34.0859 13.125 34.332 12.8789 34.4961 12.6211L34.5078 12.6094C34.6602 12.3516 34.7422 12.0703 34.7422 11.7773C34.7422 11.4844 34.6602 11.2148 34.5078 10.957C34.3438 10.6992 34.0977 10.4648 33.7578 10.2422C33.418 10.0195 33.043 9.84375 32.6211 9.73828C32.1992 9.62109 31.7422 9.5625 31.2383 9.5625C30.2422 9.5625 29.4219 9.78516 28.7539 10.2305H28.7422C28.0859 10.6758 27.7578 11.1797 27.7578 11.7773C27.7578 12.0703 27.8398 12.3516 27.9922 12.6094C28.1562 12.8789 28.4023 13.125 28.7422 13.3594ZM32.7969 5.58984C33.5469 5.76562 34.2383 6.01172 34.8711 6.33984V5.80078C34.8945 5.66016 34.9648 5.58984 35.082 5.58984H41.1055C41.2461 5.61328 41.3047 5.68359 41.3047 5.80078V17.8008C41.2812 17.9297 41.2227 18 41.1055 18H35.082C34.9414 17.9766 34.8711 17.9062 34.8711 17.8008V17.2852C34.2031 17.6016 33.5 17.8477 32.7383 18.0117C31.8828 18.2109 30.9688 18.3047 29.9961 18.3047C28.6836 18.3047 27.5 18.1523 26.4219 17.8477C25.3438 17.5312 24.3711 17.0742 23.5273 16.4531C22.6719 15.8203 22.0273 15.1055 21.6055 14.332C21.1719 13.5469 20.9609 12.6797 20.9609 11.7539C20.9609 10.8281 21.1836 9.97266 21.6172 9.19922C22.0508 8.42578 22.6953 7.73438 23.5508 7.125C24.4062 6.51562 25.3789 6.05859 26.457 5.75391C27.5234 5.44922 28.707 5.29688 29.9961 5.29688C31.0039 5.29688 31.9414 5.39062 32.7969 5.58984ZM51.2891 11.6484V17.8008C51.2656 17.9297 51.1953 18 51.0781 18H44.7031C44.5625 17.9766 44.4922 17.9062 44.4922 17.8008V1.3125C44.5156 1.17188 44.5859 1.10156 44.7031 1.10156H50.9492C51.0898 1.125 51.1602 1.19531 51.1602 1.3125V6.94922C51.6406 6.50391 52.3086 6.12891 53.1641 5.82422C54.1602 5.46094 55.3203 5.27344 56.6211 5.27344C57.5938 5.27344 58.5078 5.37891 59.3398 5.60156C60.1602 5.82422 60.9219 6.15234 61.6016 6.58594L61.6133 6.59766C62.3281 7.03125 62.8672 7.57031 63.2188 8.21484C63.582 8.85938 63.7695 9.59766 63.7695 10.418V17.8008C63.7461 17.9297 63.6758 18 63.5586 18H57.1367C57.0078 17.9766 56.9375 17.9062 56.9375 17.8008V11.5195C56.9375 10.8984 56.7148 10.418 56.2695 10.0781C55.8125 9.71484 55.1562 9.53906 54.3125 9.53906C53.3867 9.53906 52.6484 9.73828 52.0977 10.1484C51.5586 10.5234 51.2891 11.0273 51.2891 11.6484ZM73.2383 13.3125C73.8945 13.7461 74.6914 13.9688 75.6523 13.9688C76.6484 13.9688 77.457 13.7461 78.1133 13.3242C78.7227 12.9023 79.0391 12.3984 79.0391 11.7773C79.0391 11.1914 78.7227 10.6875 78.0898 10.2656C77.4453 9.84375 76.6367 9.63281 75.6523 9.63281C74.7031 9.63281 73.9062 9.84375 73.25 10.2773C72.6289 10.6875 72.3125 11.1914 72.3125 11.7773C72.3125 12.3867 72.6172 12.9023 73.2383 13.3125ZM85.1094 14.3672C84.6406 15.1406 83.9258 15.8438 82.9648 16.4766C82.0273 17.1094 80.9375 17.5781 79.7188 17.8828C78.5117 18.1992 77.1523 18.3516 75.6523 18.3516C74.1523 18.3516 72.8047 18.1992 71.5859 17.8828C70.3789 17.5781 69.3008 17.1094 68.3516 16.4883L68.3398 16.4766C67.4023 15.8438 66.6992 15.1406 66.2305 14.3672C65.75 13.5938 65.5156 12.7266 65.5156 11.8008C65.5156 10.8633 65.75 10.0078 66.2305 9.22266C66.6992 8.44922 67.4023 7.74609 68.3398 7.125C69.2891 6.49219 70.3789 6.02344 71.5859 5.70703C72.8047 5.40234 74.1523 5.25 75.6523 5.25C77.1523 5.25 78.5117 5.40234 79.7188 5.70703C80.9375 6.02344 82.0273 6.49219 82.9648 7.11328C83.9258 7.74609 84.6406 8.44922 85.1094 9.22266C85.5898 10.0078 85.8359 10.8633 85.8359 11.8008C85.8359 12.7266 85.5898 13.5938 85.1094 14.3672ZM95.0352 13.3125C95.6914 13.7461 96.4883 13.9688 97.4492 13.9688C98.4453 13.9688 99.2539 13.7461 99.9102 13.3242C100.52 12.9023 100.836 12.3984 100.836 11.7773C100.836 11.1914 100.52 10.6875 99.8867 10.2656C99.2422 9.84375 98.4336 9.63281 97.4492 9.63281C96.5 9.63281 95.7031 9.84375 95.0469 10.2773C94.4258 10.6875 94.1094 11.1914 94.1094 11.7773C94.1094 12.3867 94.4141 12.9023 95.0352 13.3125ZM106.906 14.3672C106.438 15.1406 105.723 15.8438 104.762 16.4766C103.824 17.1094 102.734 17.5781 101.516 17.8828C100.309 18.1992 98.9492 18.3516 97.4492 18.3516C95.9492 18.3516 94.6016 18.1992 93.3828 17.8828C92.1758 17.5781 91.0977 17.1094 90.1484 16.4883L90.1367 16.4766C89.1992 15.8438 88.4961 15.1406 88.0273 14.3672C87.5469 13.5938 87.3125 12.7266 87.3125 11.8008C87.3125 10.8633 87.5469 10.0078 88.0273 9.22266C88.4961 8.44922 89.1992 7.74609 90.1367 7.125C91.0859 6.49219 92.1758 6.02344 93.3828 5.70703C94.6016 5.40234 95.9492 5.25 97.4492 5.25C98.9492 5.25 100.309 5.40234 101.516 5.70703C102.734 6.02344 103.824 6.49219 104.762 7.11328C105.723 7.74609 106.438 8.44922 106.906 9.22266C107.387 10.0078 107.633 10.8633 107.633 11.8008C107.633 12.7266 107.387 13.5938 106.906 14.3672Z" fill="#FFD52E"/>
<path d="M116.206 17.6498C115.431 17.9154 114.581 17.9181 113.653 17.6694C112.668 17.4056 111.899 16.9691 111.335 16.3569C110.766 15.7192 110.57 15.0478 110.755 14.3574C110.934 13.6895 111.433 13.2289 112.268 12.9672C113.062 12.719 113.946 12.7254 114.908 12.9832C115.35 13.1015 115.754 13.2703 116.122 13.4783C116.488 13.6977 116.805 13.9645 117.076 14.2675C117.358 14.5736 117.554 14.8811 117.648 15.2096C117.754 15.5411 117.751 15.8679 117.66 16.2075C117.478 16.8867 116.998 17.3647 116.206 17.6498ZM121.388 2.06567L117.972 13.0518C117.913 13.1815 117.826 13.2312 117.713 13.2009L112.246 11.736C112.133 11.7056 112.094 11.6225 112.094 11.4889L114.699 0.27315C114.758 0.143383 114.844 0.0936642 114.946 0.120962L121.251 1.81036C121.369 1.86636 121.408 1.94945 121.388 2.06567Z" fill="#FFD52E"/>
</svg>`;

interface TitleBarProps {
    children?: React.ReactNode;
    title?: string;
    scrollY?: Animated.Value;
}

export const TitleBar: React.FC<TitleBarProps> = ({ children, title, scrollY = new Animated.Value(0) }) => {
    // Use BlurView on iOS and a semi-transparent background on Android
    const isIOS = Platform.OS === 'ios';

    // State for background opacity and blur intensity
    const [backgroundOpacity, setBackgroundOpacity] = useState(0);
    const [blurIntensity, setBlurIntensity] = useState(0);

    // Load the custom font
    const [fontsLoaded] = useFonts({
        'YSMusic-HeadlineBold': require('../assets/YSMusic-HeadlineBold.ttf'),
    });

    // Update background opacity based on scroll position
    useEffect(() => {
        const listener = scrollY.addListener(({ value }) => {
            // Start adding opacity after 20px of scroll
            const opacity = Math.min(value / 100, 0.7);
            setBackgroundOpacity(opacity);
            setBlurIntensity(opacity * 70);
        });

        return () => {
            scrollY.removeListener(listener);
        };
    }, [scrollY]);

    return (
        <View
            style={{
                position: 'absolute',
                top: 0,
                left: 0,
                right: 0,
                zIndex: 100,
            }}
        >
            <View className="w-full h-20 pt-2 relative">
                {isIOS ? (
                    <View style={{ position: 'absolute', width: '100%', height: '100%' }}>
                        <BlurView
                            intensity={blurIntensity}
                            tint="dark"
                            className="absolute w-full h-full"
                        />
                    </View>
                ) : (
                    <View
                        className="absolute w-full h-full backdrop-blur-md"
                        style={{
                            backgroundColor: `rgba(0,0,0,${backgroundOpacity})`
                        }}
                    />
                )}

                <View className="w-full h-full flex items-center justify-center">
                    {children ? (
                        children
                    ) : title ? (
                        <View className="flex-1 items-center justify-center">
                            <Text
                                style={{
                                    fontFamily: fontsLoaded ? 'YSMusic-HeadlineBold' : undefined,
                                    color: '#ffffff',
                                    fontSize: 24,
                                }}
                            >
                                {title}
                            </Text>
                        </View>
                    ) : (
                        <View className="flex-1 items-center justify-center">
                            <SvgXml xml={yahooSvg} width={140} height={28} style={{ marginTop: 6 }} />
                        </View>
                    )}
                </View>
            </View>
        </View>
    );
}; 